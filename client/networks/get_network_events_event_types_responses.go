// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetNetworkEventsEventTypesReader is a Reader for the GetNetworkEventsEventTypes structure.
type GetNetworkEventsEventTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkEventsEventTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkEventsEventTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkEventsEventTypesOK creates a GetNetworkEventsEventTypesOK with default headers values
func NewGetNetworkEventsEventTypesOK() *GetNetworkEventsEventTypesOK {
	return &GetNetworkEventsEventTypesOK{}
}

/*
GetNetworkEventsEventTypesOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetNetworkEventsEventTypesOK struct {
	Payload []*GetNetworkEventsEventTypesOKBodyItems0
}

// IsSuccess returns true when this get network events event types o k response has a 2xx status code
func (o *GetNetworkEventsEventTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network events event types o k response has a 3xx status code
func (o *GetNetworkEventsEventTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network events event types o k response has a 4xx status code
func (o *GetNetworkEventsEventTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network events event types o k response has a 5xx status code
func (o *GetNetworkEventsEventTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network events event types o k response a status code equal to that given
func (o *GetNetworkEventsEventTypesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network events event types o k response
func (o *GetNetworkEventsEventTypesOK) Code() int {
	return 200
}

func (o *GetNetworkEventsEventTypesOK) Error() string {
	return fmt.Sprintf("[GET /networks/{networkId}/events/eventTypes][%d] getNetworkEventsEventTypesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkEventsEventTypesOK) String() string {
	return fmt.Sprintf("[GET /networks/{networkId}/events/eventTypes][%d] getNetworkEventsEventTypesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkEventsEventTypesOK) GetPayload() []*GetNetworkEventsEventTypesOKBodyItems0 {
	return o.Payload
}

func (o *GetNetworkEventsEventTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetNetworkEventsEventTypesOKBodyItems0 get network events event types o k body items0
swagger:model GetNetworkEventsEventTypesOKBodyItems0
*/
type GetNetworkEventsEventTypesOKBodyItems0 struct {

	// Event category
	Category string `json:"category,omitempty"`

	// Description of the event
	Description string `json:"description,omitempty"`

	// Event type
	Type string `json:"type,omitempty"`
}

// Validate validates this get network events event types o k body items0
func (o *GetNetworkEventsEventTypesOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get network events event types o k body items0 based on context it is used
func (o *GetNetworkEventsEventTypesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNetworkEventsEventTypesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNetworkEventsEventTypesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetNetworkEventsEventTypesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
