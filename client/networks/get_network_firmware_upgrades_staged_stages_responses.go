// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetNetworkFirmwareUpgradesStagedStagesReader is a Reader for the GetNetworkFirmwareUpgradesStagedStages structure.
type GetNetworkFirmwareUpgradesStagedStagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkFirmwareUpgradesStagedStagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkFirmwareUpgradesStagedStagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkFirmwareUpgradesStagedStagesOK creates a GetNetworkFirmwareUpgradesStagedStagesOK with default headers values
func NewGetNetworkFirmwareUpgradesStagedStagesOK() *GetNetworkFirmwareUpgradesStagedStagesOK {
	return &GetNetworkFirmwareUpgradesStagedStagesOK{}
}

/*
GetNetworkFirmwareUpgradesStagedStagesOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetNetworkFirmwareUpgradesStagedStagesOK struct {
	Payload []*GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0
}

// IsSuccess returns true when this get network firmware upgrades staged stages o k response has a 2xx status code
func (o *GetNetworkFirmwareUpgradesStagedStagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network firmware upgrades staged stages o k response has a 3xx status code
func (o *GetNetworkFirmwareUpgradesStagedStagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network firmware upgrades staged stages o k response has a 4xx status code
func (o *GetNetworkFirmwareUpgradesStagedStagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network firmware upgrades staged stages o k response has a 5xx status code
func (o *GetNetworkFirmwareUpgradesStagedStagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network firmware upgrades staged stages o k response a status code equal to that given
func (o *GetNetworkFirmwareUpgradesStagedStagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network firmware upgrades staged stages o k response
func (o *GetNetworkFirmwareUpgradesStagedStagesOK) Code() int {
	return 200
}

func (o *GetNetworkFirmwareUpgradesStagedStagesOK) Error() string {
	return fmt.Sprintf("[GET /networks/{networkId}/firmwareUpgrades/staged/stages][%d] getNetworkFirmwareUpgradesStagedStagesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkFirmwareUpgradesStagedStagesOK) String() string {
	return fmt.Sprintf("[GET /networks/{networkId}/firmwareUpgrades/staged/stages][%d] getNetworkFirmwareUpgradesStagedStagesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkFirmwareUpgradesStagedStagesOK) GetPayload() []*GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0 {
	return o.Payload
}

func (o *GetNetworkFirmwareUpgradesStagedStagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0 get network firmware upgrades staged stages o k body items0
swagger:model GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0
*/
type GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0 struct {

	// group
	Group *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group `json:"group,omitempty"`
}

// Validate validates this get network firmware upgrades staged stages o k body items0
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0) validateGroup(formats strfmt.Registry) error {
	if swag.IsZero(o.Group) { // not required
		return nil
	}

	if o.Group != nil {
		if err := o.Group.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("group")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get network firmware upgrades staged stages o k body items0 based on the context it is used
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateGroup(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0) contextValidateGroup(ctx context.Context, formats strfmt.Registry) error {

	if o.Group != nil {
		if err := o.Group.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("group")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group The Staged Upgrade Group
swagger:model GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group
*/
type GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group struct {

	// Description of the Staged Upgrade Group
	Description string `json:"description,omitempty"`

	// Id of the Staged Upgrade Group
	ID string `json:"id,omitempty"`

	// Name of the Staged Upgrade Group
	Name string `json:"name,omitempty"`
}

// Validate validates this get network firmware upgrades staged stages o k body items0 group
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get network firmware upgrades staged stages o k body items0 group based on context it is used
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group) UnmarshalBinary(b []byte) error {
	var res GetNetworkFirmwareUpgradesStagedStagesOKBodyItems0Group
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
