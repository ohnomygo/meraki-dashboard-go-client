// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationAPIRequestsReader is a Reader for the GetOrganizationAPIRequests structure.
type GetOrganizationAPIRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationAPIRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationAPIRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrganizationAPIRequestsOK creates a GetOrganizationAPIRequestsOK with default headers values
func NewGetOrganizationAPIRequestsOK() *GetOrganizationAPIRequestsOK {
	return &GetOrganizationAPIRequestsOK{}
}

/*
GetOrganizationAPIRequestsOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetOrganizationAPIRequestsOK struct {

	/* A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
	 */
	Link string

	Payload []*GetOrganizationAPIRequestsOKBodyItems0
}

// IsSuccess returns true when this get organization Api requests o k response has a 2xx status code
func (o *GetOrganizationAPIRequestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization Api requests o k response has a 3xx status code
func (o *GetOrganizationAPIRequestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization Api requests o k response has a 4xx status code
func (o *GetOrganizationAPIRequestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization Api requests o k response has a 5xx status code
func (o *GetOrganizationAPIRequestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization Api requests o k response a status code equal to that given
func (o *GetOrganizationAPIRequestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organization Api requests o k response
func (o *GetOrganizationAPIRequestsOK) Code() int {
	return 200
}

func (o *GetOrganizationAPIRequestsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}/apiRequests][%d] getOrganizationApiRequestsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationAPIRequestsOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}/apiRequests][%d] getOrganizationApiRequestsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationAPIRequestsOK) GetPayload() []*GetOrganizationAPIRequestsOKBodyItems0 {
	return o.Payload
}

func (o *GetOrganizationAPIRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Link
	hdrLink := response.GetHeader("Link")

	if hdrLink != "" {
		o.Link = hdrLink
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetOrganizationAPIRequestsOKBodyItems0 get organization API requests o k body items0
swagger:model GetOrganizationAPIRequestsOKBodyItems0
*/
type GetOrganizationAPIRequestsOKBodyItems0 struct {

	// Database ID for the admin user who made the API request.
	AdminID string `json:"adminId,omitempty"`

	// The host which the API request was directed at.
	Host string `json:"host,omitempty"`

	// HTTP method used in the API request.
	Method string `json:"method,omitempty"`

	// Operation ID for the endpoint.
	OperationID string `json:"operationId,omitempty"`

	// The API request path.
	Path string `json:"path,omitempty"`

	// The query string sent with the API request.
	QueryString string `json:"queryString,omitempty"`

	// API request response code.
	ResponseCode int64 `json:"responseCode,omitempty"`

	// Public IP address from which the API request was made.
	SourceIP string `json:"sourceIp,omitempty"`

	// Timestamp, in iso8601 format, indicating when the API request was made.
	// Format: date-time
	Ts strfmt.DateTime `json:"ts,omitempty"`

	// The API request user agent.
	UserAgent string `json:"userAgent,omitempty"`

	// API version of the endpoint.
	// Enum: [0 1]
	Version int64 `json:"version,omitempty"`
}

// Validate validates this get organization API requests o k body items0
func (o *GetOrganizationAPIRequestsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTs(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationAPIRequestsOKBodyItems0) validateTs(formats strfmt.Registry) error {
	if swag.IsZero(o.Ts) { // not required
		return nil
	}

	if err := validate.FormatOf("ts", "body", "date-time", o.Ts.String(), formats); err != nil {
		return err
	}

	return nil
}

var getOrganizationApiRequestsOKBodyItems0TypeVersionPropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[0,1]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getOrganizationApiRequestsOKBodyItems0TypeVersionPropEnum = append(getOrganizationApiRequestsOKBodyItems0TypeVersionPropEnum, v)
	}
}

// prop value enum
func (o *GetOrganizationAPIRequestsOKBodyItems0) validateVersionEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, getOrganizationApiRequestsOKBodyItems0TypeVersionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetOrganizationAPIRequestsOKBodyItems0) validateVersion(formats strfmt.Registry) error {
	if swag.IsZero(o.Version) { // not required
		return nil
	}

	// value enum
	if err := o.validateVersionEnum("version", "body", o.Version); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organization API requests o k body items0 based on context it is used
func (o *GetOrganizationAPIRequestsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationAPIRequestsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationAPIRequestsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationAPIRequestsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
