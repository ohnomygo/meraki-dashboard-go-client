// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationDevicesAvailabilitiesParams creates a new GetOrganizationDevicesAvailabilitiesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationDevicesAvailabilitiesParams() *GetOrganizationDevicesAvailabilitiesParams {
	return &GetOrganizationDevicesAvailabilitiesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationDevicesAvailabilitiesParamsWithTimeout creates a new GetOrganizationDevicesAvailabilitiesParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationDevicesAvailabilitiesParamsWithTimeout(timeout time.Duration) *GetOrganizationDevicesAvailabilitiesParams {
	return &GetOrganizationDevicesAvailabilitiesParams{
		timeout: timeout,
	}
}

// NewGetOrganizationDevicesAvailabilitiesParamsWithContext creates a new GetOrganizationDevicesAvailabilitiesParams object
// with the ability to set a context for a request.
func NewGetOrganizationDevicesAvailabilitiesParamsWithContext(ctx context.Context) *GetOrganizationDevicesAvailabilitiesParams {
	return &GetOrganizationDevicesAvailabilitiesParams{
		Context: ctx,
	}
}

// NewGetOrganizationDevicesAvailabilitiesParamsWithHTTPClient creates a new GetOrganizationDevicesAvailabilitiesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationDevicesAvailabilitiesParamsWithHTTPClient(client *http.Client) *GetOrganizationDevicesAvailabilitiesParams {
	return &GetOrganizationDevicesAvailabilitiesParams{
		HTTPClient: client,
	}
}

/*
GetOrganizationDevicesAvailabilitiesParams contains all the parameters to send to the API endpoint

	for the get organization devices availabilities operation.

	Typically these are written to a http.Request.
*/
type GetOrganizationDevicesAvailabilitiesParams struct {

	/* EndingBefore.

	   A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	*/
	EndingBefore *string

	/* NetworkIds.

	   Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
	*/
	NetworkIds []string

	/* OrganizationID.

	   Organization ID
	*/
	OrganizationID string

	/* PerPage.

	   The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
	*/
	PerPage *int64

	/* ProductTypes.

	   Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
	*/
	ProductTypes []string

	/* Serials.

	   Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
	*/
	Serials []string

	/* StartingAfter.

	   A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	*/
	StartingAfter *string

	/* Tags.

	   An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
	*/
	Tags []string

	/* TagsFilterType.

	   An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
	*/
	TagsFilterType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization devices availabilities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationDevicesAvailabilitiesParams) WithDefaults() *GetOrganizationDevicesAvailabilitiesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization devices availabilities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationDevicesAvailabilitiesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithTimeout(timeout time.Duration) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithContext(ctx context.Context) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithHTTPClient(client *http.Client) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndingBefore adds the endingBefore to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithEndingBefore(endingBefore *string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetEndingBefore(endingBefore)
	return o
}

// SetEndingBefore adds the endingBefore to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetEndingBefore(endingBefore *string) {
	o.EndingBefore = endingBefore
}

// WithNetworkIds adds the networkIds to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithNetworkIds(networkIds []string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetNetworkIds(networkIds)
	return o
}

// SetNetworkIds adds the networkIds to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetNetworkIds(networkIds []string) {
	o.NetworkIds = networkIds
}

// WithOrganizationID adds the organizationID to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithOrganizationID(organizationID string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithPerPage adds the perPage to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithPerPage(perPage *int64) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetPerPage(perPage *int64) {
	o.PerPage = perPage
}

// WithProductTypes adds the productTypes to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithProductTypes(productTypes []string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetProductTypes(productTypes)
	return o
}

// SetProductTypes adds the productTypes to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetProductTypes(productTypes []string) {
	o.ProductTypes = productTypes
}

// WithSerials adds the serials to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithSerials(serials []string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetSerials(serials)
	return o
}

// SetSerials adds the serials to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetSerials(serials []string) {
	o.Serials = serials
}

// WithStartingAfter adds the startingAfter to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithStartingAfter(startingAfter *string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetStartingAfter(startingAfter)
	return o
}

// SetStartingAfter adds the startingAfter to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetStartingAfter(startingAfter *string) {
	o.StartingAfter = startingAfter
}

// WithTags adds the tags to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithTags(tags []string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetTags(tags []string) {
	o.Tags = tags
}

// WithTagsFilterType adds the tagsFilterType to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) WithTagsFilterType(tagsFilterType *string) *GetOrganizationDevicesAvailabilitiesParams {
	o.SetTagsFilterType(tagsFilterType)
	return o
}

// SetTagsFilterType adds the tagsFilterType to the get organization devices availabilities params
func (o *GetOrganizationDevicesAvailabilitiesParams) SetTagsFilterType(tagsFilterType *string) {
	o.TagsFilterType = tagsFilterType
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationDevicesAvailabilitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndingBefore != nil {

		// query param endingBefore
		var qrEndingBefore string

		if o.EndingBefore != nil {
			qrEndingBefore = *o.EndingBefore
		}
		qEndingBefore := qrEndingBefore
		if qEndingBefore != "" {

			if err := r.SetQueryParam("endingBefore", qEndingBefore); err != nil {
				return err
			}
		}
	}

	if o.NetworkIds != nil {

		// binding items for networkIds
		joinedNetworkIds := o.bindParamNetworkIds(reg)

		// query array param networkIds
		if err := r.SetQueryParam("networkIds", joinedNetworkIds...); err != nil {
			return err
		}
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if o.PerPage != nil {

		// query param perPage
		var qrPerPage int64

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt64(qrPerPage)
		if qPerPage != "" {

			if err := r.SetQueryParam("perPage", qPerPage); err != nil {
				return err
			}
		}
	}

	if o.ProductTypes != nil {

		// binding items for productTypes
		joinedProductTypes := o.bindParamProductTypes(reg)

		// query array param productTypes
		if err := r.SetQueryParam("productTypes", joinedProductTypes...); err != nil {
			return err
		}
	}

	if o.Serials != nil {

		// binding items for serials
		joinedSerials := o.bindParamSerials(reg)

		// query array param serials
		if err := r.SetQueryParam("serials", joinedSerials...); err != nil {
			return err
		}
	}

	if o.StartingAfter != nil {

		// query param startingAfter
		var qrStartingAfter string

		if o.StartingAfter != nil {
			qrStartingAfter = *o.StartingAfter
		}
		qStartingAfter := qrStartingAfter
		if qStartingAfter != "" {

			if err := r.SetQueryParam("startingAfter", qStartingAfter); err != nil {
				return err
			}
		}
	}

	if o.Tags != nil {

		// binding items for tags
		joinedTags := o.bindParamTags(reg)

		// query array param tags
		if err := r.SetQueryParam("tags", joinedTags...); err != nil {
			return err
		}
	}

	if o.TagsFilterType != nil {

		// query param tagsFilterType
		var qrTagsFilterType string

		if o.TagsFilterType != nil {
			qrTagsFilterType = *o.TagsFilterType
		}
		qTagsFilterType := qrTagsFilterType
		if qTagsFilterType != "" {

			if err := r.SetQueryParam("tagsFilterType", qTagsFilterType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOrganizationDevicesAvailabilities binds the parameter networkIds
func (o *GetOrganizationDevicesAvailabilitiesParams) bindParamNetworkIds(formats strfmt.Registry) []string {
	networkIdsIR := o.NetworkIds

	var networkIdsIC []string
	for _, networkIdsIIR := range networkIdsIR { // explode []string

		networkIdsIIV := networkIdsIIR // string as string
		networkIdsIC = append(networkIdsIC, networkIdsIIV)
	}

	// items.CollectionFormat: ""
	networkIdsIS := swag.JoinByFormat(networkIdsIC, "")

	return networkIdsIS
}

// bindParamGetOrganizationDevicesAvailabilities binds the parameter productTypes
func (o *GetOrganizationDevicesAvailabilitiesParams) bindParamProductTypes(formats strfmt.Registry) []string {
	productTypesIR := o.ProductTypes

	var productTypesIC []string
	for _, productTypesIIR := range productTypesIR { // explode []string

		productTypesIIV := productTypesIIR // string as string
		productTypesIC = append(productTypesIC, productTypesIIV)
	}

	// items.CollectionFormat: ""
	productTypesIS := swag.JoinByFormat(productTypesIC, "")

	return productTypesIS
}

// bindParamGetOrganizationDevicesAvailabilities binds the parameter serials
func (o *GetOrganizationDevicesAvailabilitiesParams) bindParamSerials(formats strfmt.Registry) []string {
	serialsIR := o.Serials

	var serialsIC []string
	for _, serialsIIR := range serialsIR { // explode []string

		serialsIIV := serialsIIR // string as string
		serialsIC = append(serialsIC, serialsIIV)
	}

	// items.CollectionFormat: ""
	serialsIS := swag.JoinByFormat(serialsIC, "")

	return serialsIS
}

// bindParamGetOrganizationDevicesAvailabilities binds the parameter tags
func (o *GetOrganizationDevicesAvailabilitiesParams) bindParamTags(formats strfmt.Registry) []string {
	tagsIR := o.Tags

	var tagsIC []string
	for _, tagsIIR := range tagsIR { // explode []string

		tagsIIV := tagsIIR // string as string
		tagsIC = append(tagsIC, tagsIIV)
	}

	// items.CollectionFormat: ""
	tagsIS := swag.JoinByFormat(tagsIC, "")

	return tagsIS
}
