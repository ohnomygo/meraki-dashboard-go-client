// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateOrganizationPolicyObjectsGroupParams creates a new CreateOrganizationPolicyObjectsGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateOrganizationPolicyObjectsGroupParams() *CreateOrganizationPolicyObjectsGroupParams {
	return &CreateOrganizationPolicyObjectsGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateOrganizationPolicyObjectsGroupParamsWithTimeout creates a new CreateOrganizationPolicyObjectsGroupParams object
// with the ability to set a timeout on a request.
func NewCreateOrganizationPolicyObjectsGroupParamsWithTimeout(timeout time.Duration) *CreateOrganizationPolicyObjectsGroupParams {
	return &CreateOrganizationPolicyObjectsGroupParams{
		timeout: timeout,
	}
}

// NewCreateOrganizationPolicyObjectsGroupParamsWithContext creates a new CreateOrganizationPolicyObjectsGroupParams object
// with the ability to set a context for a request.
func NewCreateOrganizationPolicyObjectsGroupParamsWithContext(ctx context.Context) *CreateOrganizationPolicyObjectsGroupParams {
	return &CreateOrganizationPolicyObjectsGroupParams{
		Context: ctx,
	}
}

// NewCreateOrganizationPolicyObjectsGroupParamsWithHTTPClient creates a new CreateOrganizationPolicyObjectsGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateOrganizationPolicyObjectsGroupParamsWithHTTPClient(client *http.Client) *CreateOrganizationPolicyObjectsGroupParams {
	return &CreateOrganizationPolicyObjectsGroupParams{
		HTTPClient: client,
	}
}

/*
CreateOrganizationPolicyObjectsGroupParams contains all the parameters to send to the API endpoint

	for the create organization policy objects group operation.

	Typically these are written to a http.Request.
*/
type CreateOrganizationPolicyObjectsGroupParams struct {

	// CreateOrganizationPolicyObjectsGroup.
	CreateOrganizationPolicyObjectsGroup CreateOrganizationPolicyObjectsGroupBody

	/* OrganizationID.

	   Organization ID
	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create organization policy objects group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateOrganizationPolicyObjectsGroupParams) WithDefaults() *CreateOrganizationPolicyObjectsGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create organization policy objects group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateOrganizationPolicyObjectsGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) WithTimeout(timeout time.Duration) *CreateOrganizationPolicyObjectsGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) WithContext(ctx context.Context) *CreateOrganizationPolicyObjectsGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) WithHTTPClient(client *http.Client) *CreateOrganizationPolicyObjectsGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateOrganizationPolicyObjectsGroup adds the createOrganizationPolicyObjectsGroup to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) WithCreateOrganizationPolicyObjectsGroup(createOrganizationPolicyObjectsGroup CreateOrganizationPolicyObjectsGroupBody) *CreateOrganizationPolicyObjectsGroupParams {
	o.SetCreateOrganizationPolicyObjectsGroup(createOrganizationPolicyObjectsGroup)
	return o
}

// SetCreateOrganizationPolicyObjectsGroup adds the createOrganizationPolicyObjectsGroup to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) SetCreateOrganizationPolicyObjectsGroup(createOrganizationPolicyObjectsGroup CreateOrganizationPolicyObjectsGroupBody) {
	o.CreateOrganizationPolicyObjectsGroup = createOrganizationPolicyObjectsGroup
}

// WithOrganizationID adds the organizationID to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) WithOrganizationID(organizationID string) *CreateOrganizationPolicyObjectsGroupParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the create organization policy objects group params
func (o *CreateOrganizationPolicyObjectsGroupParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateOrganizationPolicyObjectsGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.CreateOrganizationPolicyObjectsGroup); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
