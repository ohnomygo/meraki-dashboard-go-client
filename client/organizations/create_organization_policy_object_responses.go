// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateOrganizationPolicyObjectReader is a Reader for the CreateOrganizationPolicyObject structure.
type CreateOrganizationPolicyObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrganizationPolicyObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOrganizationPolicyObjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOrganizationPolicyObjectCreated creates a CreateOrganizationPolicyObjectCreated with default headers values
func NewCreateOrganizationPolicyObjectCreated() *CreateOrganizationPolicyObjectCreated {
	return &CreateOrganizationPolicyObjectCreated{}
}

/*
CreateOrganizationPolicyObjectCreated describes a response with status code 201, with default header values.

Successful operation
*/
type CreateOrganizationPolicyObjectCreated struct {
	Payload interface{}
}

// IsSuccess returns true when this create organization policy object created response has a 2xx status code
func (o *CreateOrganizationPolicyObjectCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create organization policy object created response has a 3xx status code
func (o *CreateOrganizationPolicyObjectCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization policy object created response has a 4xx status code
func (o *CreateOrganizationPolicyObjectCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create organization policy object created response has a 5xx status code
func (o *CreateOrganizationPolicyObjectCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization policy object created response a status code equal to that given
func (o *CreateOrganizationPolicyObjectCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create organization policy object created response
func (o *CreateOrganizationPolicyObjectCreated) Code() int {
	return 201
}

func (o *CreateOrganizationPolicyObjectCreated) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationId}/policyObjects][%d] createOrganizationPolicyObjectCreated  %+v", 201, o.Payload)
}

func (o *CreateOrganizationPolicyObjectCreated) String() string {
	return fmt.Sprintf("[POST /organizations/{organizationId}/policyObjects][%d] createOrganizationPolicyObjectCreated  %+v", 201, o.Payload)
}

func (o *CreateOrganizationPolicyObjectCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateOrganizationPolicyObjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateOrganizationPolicyObjectBody create organization policy object body
// Example: {"category":"network","groupIds":[],"name":"Web Servers - Datacenter 10","type":"cidr"}
swagger:model CreateOrganizationPolicyObjectBody
*/
type CreateOrganizationPolicyObjectBody struct {

	// Category of a policy object (one of: adaptivePolicy, network)
	// Required: true
	Category *string `json:"category"`

	// CIDR Value of a policy object (e.g. 10.11.12.1/24")
	Cidr string `json:"cidr,omitempty"`

	// Fully qualified domain name of policy object (e.g. "example.com")
	Fqdn string `json:"fqdn,omitempty"`

	// The IDs of policy object groups the policy object belongs to
	GroupIds []int64 `json:"groupIds"`

	// IP Address of a policy object (e.g. "1.2.3.4")
	IP string `json:"ip,omitempty"`

	// Mask of a policy object (e.g. "255.255.0.0")
	Mask string `json:"mask,omitempty"`

	// Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	// Required: true
	Name *string `json:"name"`

	// Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this create organization policy object body
func (o *CreateOrganizationPolicyObjectBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationPolicyObjectBody) validateCategory(formats strfmt.Registry) error {

	if err := validate.Required("createOrganizationPolicyObject"+"."+"category", "body", o.Category); err != nil {
		return err
	}

	return nil
}

func (o *CreateOrganizationPolicyObjectBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("createOrganizationPolicyObject"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *CreateOrganizationPolicyObjectBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("createOrganizationPolicyObject"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create organization policy object body based on context it is used
func (o *CreateOrganizationPolicyObjectBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationPolicyObjectBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationPolicyObjectBody) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationPolicyObjectBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
