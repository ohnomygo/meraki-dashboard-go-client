// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareReader is a Reader for the CreateOrganizationInventoryOnboardingCloudMonitoringPrepare structure.
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated creates a CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated with default headers values
func NewCreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated() *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated {
	return &CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated{}
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated describes a response with status code 201, with default header values.

Successful operation
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated struct {
	Payload []*CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0
}

// IsSuccess returns true when this create organization inventory onboarding cloud monitoring prepare created response has a 2xx status code
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create organization inventory onboarding cloud monitoring prepare created response has a 3xx status code
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create organization inventory onboarding cloud monitoring prepare created response has a 4xx status code
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create organization inventory onboarding cloud monitoring prepare created response has a 5xx status code
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create organization inventory onboarding cloud monitoring prepare created response a status code equal to that given
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create organization inventory onboarding cloud monitoring prepare created response
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) Code() int {
	return 201
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationId}/inventory/onboarding/cloudMonitoring/prepare][%d] createOrganizationInventoryOnboardingCloudMonitoringPrepareCreated  %+v", 201, o.Payload)
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) String() string {
	return fmt.Sprintf("[POST /organizations/{organizationId}/inventory/onboarding/cloudMonitoring/prepare][%d] createOrganizationInventoryOnboardingCloudMonitoringPrepareCreated  %+v", 201, o.Payload)
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) GetPayload() []*CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0 {
	return o.Payload
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody create organization inventory onboarding cloud monitoring prepare body
// Example: {"devices":[{"sudi":"-----BEGIN CERTIFICATE-----\n        MIIDyTCCArGgAwIBAgIKBBNXOVCGU1YztjANBgkqhkiG9w0BAQsFADAnMQ4wDAYD\n        VQQKEwVDaXNjbzEVMBMGA1UEAxMMQUNUMiBTVURJIENBMB4XDTIxMDUzMTEzNTUx\n        NVoXDTI5MDUxNDIwMjU0MVowbTEpMCcGA1UEBRMgUElEOkM5MjAwTC0yNFAtNEcg\n        U046SkFFMjUyMjBSMksxDjAMBgNVBAoTBUNpc2NvMRgwFgYDVQQLEw9BQ1QtMiBM\n        aXRlIFNVREkxFjAUBgNVBAMTDUM5MjAwTC0yNFAtNEcwggEiMA0GCSqGSIb3DQEB\n        AQUAA4IBDwAwggEKAoIBAQDaUPxW76gT5MdoEAt+UrDFiYA9RYh2iHicDViBEyow\n        TR1TuP36bHh13X3vtGiDsCD88Ci2TZIqd/EDkkc7v9ipUUYVVH+YDrPt2Aukb1PH\n        D6K0R+KhgEzRo5x54TlU6oWvjUpwNZUwwdhMWIQaUVkMyZBYNy0jGPLO8jwZhyBg\n        1Fneybr9pwedGbLrAaz+gdEikB8B4a/fvPjVfL5Ngb4QRjFqWuE+X3nLc0kHedep\n        6nfgpUNXMlStVm5nIXKP6OjmzfCHPYh9L2Ehs1TrSk1ser9Ofx0ZMVL/jBZR2EIj\n        OZ8tH6KlX2/B2pbSPIO6kD5c4UA8Cf1SbDJCwJ/kI9ihAgMBAAGjgbAwga0wDgYD\n        VR0PAQH/BAQDAgXgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUSNjx8cJw1Vu7\n        fHMJk6+4uDAD+H8wTQYDVR0RBEYwRKBCBgkrBgEEAQkVAgOgNRMzQ2hpcElEPVVV\n        VUNNaElGcUVFMklFUUVBQWNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE9MB0GA1Ud\n        DgQWBBRdhMkFD/z5hokaQeLbaRsp4hkvbzANBgkqhkiG9w0BAQsFAAOCAQEAMtuh\n        YpBz4xEZ7YdJsLpw67Q0TTJGnTBRpzAeY1urYDoDz8TSx556XG7z3IRzuED5KVSp\n        OwmH/iZ+tDfYQ3W3ElWTW93871DkuW4WQIfbnoHg/F7bF0DKYVkD3rpZjyz3NhzH\n        d7cjTdJXQ85bTAOXDuxKH3qewrXxxOGXgh3I6NUq0UwMTWh84lND7Jl+ZAQkYNS2\n        iHanTZFQBk3ML0NUb7fKDYGRTZRqwQ/upIO4S6LV1cxH/6V0qbMy3sCSHZoMLrW3\n        0m3M6yKpe5+VZzHZwmWdUf3Ot+zKjhveK5/YNsMIASdvtvymxUizq2Hr1hvR/kPc\n        p1vuyWxipU8JfzOh/A==\n        -----END CERTIFICATE-----\n        ","tunnel":{"certificateName":"DeviceSUDI","localInterface":1,"loopbackNumber":1000,"name":"MERAKI"},"user":{"username":"Meraki"},"vty":{"accessList":{"vtyIn":{"name":"MERAKI_IN"},"vtyOut":{"name":"MERAKI_OUT"}},"authentication":{"group":{"name":""}},"authorization":{"group":{"name":"MERAKI"}},"endLineNumber":17,"rotaryNumber":50,"startLineNumber":16}}]}
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody struct {

	// A set of devices to import (or update)
	// Required: true
	Devices []*CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0 `json:"devices"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare body
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDevices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody) validateDevices(formats strfmt.Registry) error {

	if err := validate.Required("createOrganizationInventoryOnboardingCloudMonitoringPrepare"+"."+"devices", "body", o.Devices); err != nil {
		return err
	}

	for i := 0; i < len(o.Devices); i++ {
		if swag.IsZero(o.Devices[i]) { // not required
			continue
		}

		if o.Devices[i] != nil {
			if err := o.Devices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createOrganizationInventoryOnboardingCloudMonitoringPrepare" + "." + "devices" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("createOrganizationInventoryOnboardingCloudMonitoringPrepare" + "." + "devices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare body based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDevices(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody) contextValidateDevices(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Devices); i++ {

		if o.Devices[i] != nil {
			if err := o.Devices[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createOrganizationInventoryOnboardingCloudMonitoringPrepare" + "." + "devices" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("createOrganizationInventoryOnboardingCloudMonitoringPrepare" + "." + "devices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0 create organization inventory onboarding cloud monitoring prepare created body items0
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0 struct {

	// config params
	ConfigParams *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams `json:"configParams,omitempty"`

	// Import ID from the Import operation
	DeviceID string `json:"deviceId,omitempty"`

	// Message related to whether or not the device was found and can be imported.
	Message string `json:"message,omitempty"`

	// The import status of the device
	Status string `json:"status,omitempty"`

	// Device UDI certificate
	Udi string `json:"udi,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare created body items0
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConfigParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0) validateConfigParams(formats strfmt.Registry) error {
	if swag.IsZero(o.ConfigParams) { // not required
		return nil
	}

	if o.ConfigParams != nil {
		if err := o.ConfigParams.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare created body items0 based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateConfigParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0) contextValidateConfigParams(ctx context.Context, formats strfmt.Registry) error {

	if o.ConfigParams != nil {
		if err := o.ConfigParams.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams Params used in order to connect to the device
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams struct {

	// Static IP Address used to connect to the device
	CloudStaticIP string `json:"cloudStaticIp,omitempty"`

	// tunnel
	Tunnel *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel `json:"tunnel,omitempty"`

	// user
	User *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser `json:"user,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTunnel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) validateTunnel(formats strfmt.Registry) error {
	if swag.IsZero(o.Tunnel) { // not required
		return nil
	}

	if o.Tunnel != nil {
		if err := o.Tunnel.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "tunnel")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "tunnel")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) validateUser(formats strfmt.Registry) error {
	if swag.IsZero(o.User) { // not required
		return nil
	}

	if o.User != nil {
		if err := o.User.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "user")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "user")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare created body items0 config params based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateTunnel(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) contextValidateTunnel(ctx context.Context, formats strfmt.Registry) error {

	if o.Tunnel != nil {
		if err := o.Tunnel.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "tunnel")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "tunnel")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) contextValidateUser(ctx context.Context, formats strfmt.Registry) error {

	if o.User != nil {
		if err := o.User.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "user")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "user")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel Configuration options used to connect to the device
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel struct {

	// SSH tunnel URL used to connect to the device
	Host string `json:"host,omitempty"`

	// mode
	Mode string `json:"mode,omitempty"`

	// The name of the tunnel we are attempting to connect to
	Name string `json:"name,omitempty"`

	// The port used for the ssh tunnel.
	Port string `json:"port,omitempty"`

	// root certificate
	RootCertificate *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate `json:"rootCertificate,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params tunnel
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRootCertificate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel) validateRootCertificate(formats strfmt.Registry) error {
	if swag.IsZero(o.RootCertificate) { // not required
		return nil
	}

	if o.RootCertificate != nil {
		if err := o.RootCertificate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "tunnel" + "." + "rootCertificate")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "tunnel" + "." + "rootCertificate")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare created body items0 config params tunnel based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRootCertificate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel) contextValidateRootCertificate(ctx context.Context, formats strfmt.Registry) error {

	if o.RootCertificate != nil {
		if err := o.RootCertificate.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "tunnel" + "." + "rootCertificate")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "tunnel" + "." + "rootCertificate")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate Root certificate information
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate struct {

	// Public certificate value
	Content string `json:"content,omitempty"`

	// The name of the server protected by the certificate
	Name string `json:"name,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params tunnel root certificate
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params tunnel root certificate based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsTunnelRootCertificate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser User credentials used to connect to the device
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser struct {

	// The public key for the registered user
	PublicKey string `json:"publicKey,omitempty"`

	// secret
	Secret *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret `json:"secret,omitempty"`

	// The username added to Catalyst device
	Username string `json:"username,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params user
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser) validateSecret(formats strfmt.Registry) error {
	if swag.IsZero(o.Secret) { // not required
		return nil
	}

	if o.Secret != nil {
		if err := o.Secret.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "user" + "." + "secret")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "user" + "." + "secret")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare created body items0 config params user based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateSecret(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser) contextValidateSecret(ctx context.Context, formats strfmt.Registry) error {

	if o.Secret != nil {
		if err := o.Secret.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configParams" + "." + "user" + "." + "secret")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("configParams" + "." + "user" + "." + "secret")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUser
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret Stores the user secret hash
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret struct {

	// The hashed secret
	Hash string `json:"hash,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params user secret
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare created body items0 config params user secret based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareCreatedBodyItems0ConfigParamsUserSecret
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0 create organization inventory onboarding cloud monitoring prepare params body devices items0
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0 struct {

	// Device SUDI certificate
	// Required: true
	Sudi *string `json:"sudi"`

	// tunnel
	Tunnel *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel `json:"tunnel,omitempty"`

	// user
	User *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User `json:"user,omitempty"`

	// vty
	Vty *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty `json:"vty,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSudi(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTunnel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVty(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) validateSudi(formats strfmt.Registry) error {

	if err := validate.Required("sudi", "body", o.Sudi); err != nil {
		return err
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) validateTunnel(formats strfmt.Registry) error {
	if swag.IsZero(o.Tunnel) { // not required
		return nil
	}

	if o.Tunnel != nil {
		if err := o.Tunnel.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tunnel")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("tunnel")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) validateUser(formats strfmt.Registry) error {
	if swag.IsZero(o.User) { // not required
		return nil
	}

	if o.User != nil {
		if err := o.User.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("user")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("user")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) validateVty(formats strfmt.Registry) error {
	if swag.IsZero(o.Vty) { // not required
		return nil
	}

	if o.Vty != nil {
		if err := o.Vty.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare params body devices items0 based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateTunnel(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateUser(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVty(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) contextValidateTunnel(ctx context.Context, formats strfmt.Registry) error {

	if o.Tunnel != nil {
		if err := o.Tunnel.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tunnel")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("tunnel")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) contextValidateUser(ctx context.Context, formats strfmt.Registry) error {

	if o.User != nil {
		if err := o.User.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("user")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("user")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) contextValidateVty(ctx context.Context, formats strfmt.Registry) error {

	if o.Vty != nil {
		if err := o.Vty.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel TLS Related Parameters
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel struct {

	// Name of the configured TLS certificate
	CertificateName string `json:"certificateName,omitempty"`

	// Number of the vlan expected to be used to connect to the cloud
	LocalInterface int64 `json:"localInterface,omitempty"`

	// Number of the configured Loopback Interface used for TLS overlay
	LoopbackNumber int64 `json:"loopbackNumber,omitempty"`

	// Name of the configured TLS tunnel
	Name string `json:"name,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 tunnel
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 tunnel based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Tunnel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User User parameters
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User struct {

	// The name of the device user for Meraki monitoring
	Username string `json:"username,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 user
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 user based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0User
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty VTY Related Parameters
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty struct {

	// access list
	AccessList *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList `json:"accessList,omitempty"`

	// authentication
	Authentication *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication `json:"authentication,omitempty"`

	// authorization
	Authorization *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization `json:"authorization,omitempty"`

	// Ending line VTY number
	EndLineNumber int64 `json:"endLineNumber,omitempty"`

	// SSH rotary number
	RotaryNumber int64 `json:"rotaryNumber,omitempty"`

	// Starting line VTY number
	StartLineNumber int64 `json:"startLineNumber,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccessList(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAuthentication(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAuthorization(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) validateAccessList(formats strfmt.Registry) error {
	if swag.IsZero(o.AccessList) { // not required
		return nil
	}

	if o.AccessList != nil {
		if err := o.AccessList.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "accessList")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "accessList")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) validateAuthentication(formats strfmt.Registry) error {
	if swag.IsZero(o.Authentication) { // not required
		return nil
	}

	if o.Authentication != nil {
		if err := o.Authentication.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authentication")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authentication")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) validateAuthorization(formats strfmt.Registry) error {
	if swag.IsZero(o.Authorization) { // not required
		return nil
	}

	if o.Authorization != nil {
		if err := o.Authorization.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authorization")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authorization")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAccessList(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateAuthentication(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateAuthorization(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) contextValidateAccessList(ctx context.Context, formats strfmt.Registry) error {

	if o.AccessList != nil {
		if err := o.AccessList.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "accessList")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "accessList")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) contextValidateAuthentication(ctx context.Context, formats strfmt.Registry) error {

	if o.Authentication != nil {
		if err := o.Authentication.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authentication")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authentication")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) contextValidateAuthorization(ctx context.Context, formats strfmt.Registry) error {

	if o.Authorization != nil {
		if err := o.Authorization.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authorization")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authorization")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0Vty
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList AccessList details
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList struct {

	// vty in
	VtyIn *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn `json:"vtyIn,omitempty"`

	// vty out
	VtyOut *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut `json:"vtyOut,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty access list
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateVtyIn(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVtyOut(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) validateVtyIn(formats strfmt.Registry) error {
	if swag.IsZero(o.VtyIn) { // not required
		return nil
	}

	if o.VtyIn != nil {
		if err := o.VtyIn.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "accessList" + "." + "vtyIn")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "accessList" + "." + "vtyIn")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) validateVtyOut(formats strfmt.Registry) error {
	if swag.IsZero(o.VtyOut) { // not required
		return nil
	}

	if o.VtyOut != nil {
		if err := o.VtyOut.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "accessList" + "." + "vtyOut")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "accessList" + "." + "vtyOut")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty access list based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateVtyIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVtyOut(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) contextValidateVtyIn(ctx context.Context, formats strfmt.Registry) error {

	if o.VtyIn != nil {
		if err := o.VtyIn.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "accessList" + "." + "vtyIn")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "accessList" + "." + "vtyIn")
			}
			return err
		}
	}

	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) contextValidateVtyOut(ctx context.Context, formats strfmt.Registry) error {

	if o.VtyOut != nil {
		if err := o.VtyOut.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "accessList" + "." + "vtyOut")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "accessList" + "." + "vtyOut")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessList
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn VTY in ACL
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn struct {

	// Name
	Name string `json:"name,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty access list vty in
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty access list vty in based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyIn
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut VTY out ACL
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut struct {

	// Name
	Name string `json:"name,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty access list vty out
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty access list vty out based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAccessListVtyOut
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication VTY AAA authentication
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication struct {

	// group
	Group *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup `json:"group,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authentication
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication) validateGroup(formats strfmt.Registry) error {
	if swag.IsZero(o.Group) { // not required
		return nil
	}

	if o.Group != nil {
		if err := o.Group.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authentication" + "." + "group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authentication" + "." + "group")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authentication based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateGroup(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication) contextValidateGroup(ctx context.Context, formats strfmt.Registry) error {

	if o.Group != nil {
		if err := o.Group.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authentication" + "." + "group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authentication" + "." + "group")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthentication
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup Group Details
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup struct {

	// Group Name
	Name string `json:"name,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authentication group
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authentication group based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthenticationGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization VTY AAA authorization
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization struct {

	// group
	Group *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup `json:"group,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authorization
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization) validateGroup(formats strfmt.Registry) error {
	if swag.IsZero(o.Group) { // not required
		return nil
	}

	if o.Group != nil {
		if err := o.Group.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authorization" + "." + "group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authorization" + "." + "group")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authorization based on the context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateGroup(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization) contextValidateGroup(ctx context.Context, formats strfmt.Registry) error {

	if o.Group != nil {
		if err := o.Group.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vty" + "." + "authorization" + "." + "group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vty" + "." + "authorization" + "." + "group")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorization
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup Group Details
swagger:model CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup
*/
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup struct {

	// Group Name
	Name string `json:"name,omitempty"`
}

// Validate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authorization group
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create organization inventory onboarding cloud monitoring prepare params body devices items0 vty authorization group based on context it is used
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInventoryOnboardingCloudMonitoringPrepareParamsBodyDevicesItems0VtyAuthorizationGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
