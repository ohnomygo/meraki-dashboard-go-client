// Code generated by go-swagger; DO NOT EDIT.

package sm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetNetworkSmDeviceDeviceProfilesReader is a Reader for the GetNetworkSmDeviceDeviceProfiles structure.
type GetNetworkSmDeviceDeviceProfilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkSmDeviceDeviceProfilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkSmDeviceDeviceProfilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkSmDeviceDeviceProfilesOK creates a GetNetworkSmDeviceDeviceProfilesOK with default headers values
func NewGetNetworkSmDeviceDeviceProfilesOK() *GetNetworkSmDeviceDeviceProfilesOK {
	return &GetNetworkSmDeviceDeviceProfilesOK{}
}

/*
GetNetworkSmDeviceDeviceProfilesOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetNetworkSmDeviceDeviceProfilesOK struct {
	Payload []*GetNetworkSmDeviceDeviceProfilesOKBodyItems0
}

// IsSuccess returns true when this get network sm device device profiles o k response has a 2xx status code
func (o *GetNetworkSmDeviceDeviceProfilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network sm device device profiles o k response has a 3xx status code
func (o *GetNetworkSmDeviceDeviceProfilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network sm device device profiles o k response has a 4xx status code
func (o *GetNetworkSmDeviceDeviceProfilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network sm device device profiles o k response has a 5xx status code
func (o *GetNetworkSmDeviceDeviceProfilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network sm device device profiles o k response a status code equal to that given
func (o *GetNetworkSmDeviceDeviceProfilesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network sm device device profiles o k response
func (o *GetNetworkSmDeviceDeviceProfilesOK) Code() int {
	return 200
}

func (o *GetNetworkSmDeviceDeviceProfilesOK) Error() string {
	return fmt.Sprintf("[GET /networks/{networkId}/sm/devices/{deviceId}/deviceProfiles][%d] getNetworkSmDeviceDeviceProfilesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkSmDeviceDeviceProfilesOK) String() string {
	return fmt.Sprintf("[GET /networks/{networkId}/sm/devices/{deviceId}/deviceProfiles][%d] getNetworkSmDeviceDeviceProfilesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkSmDeviceDeviceProfilesOK) GetPayload() []*GetNetworkSmDeviceDeviceProfilesOKBodyItems0 {
	return o.Payload
}

func (o *GetNetworkSmDeviceDeviceProfilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetNetworkSmDeviceDeviceProfilesOKBodyItems0 get network sm device device profiles o k body items0
swagger:model GetNetworkSmDeviceDeviceProfilesOKBodyItems0
*/
type GetNetworkSmDeviceDeviceProfilesOKBodyItems0 struct {

	// The Meraki managed device Id.
	DeviceID string `json:"deviceId,omitempty"`

	// The numerical Meraki Id of the profile.
	ID string `json:"id,omitempty"`

	// A boolean indicating if the profile is encrypted.
	IsEncrypted bool `json:"isEncrypted,omitempty"`

	// Whether or not the profile is managed by Meraki.
	IsManaged bool `json:"isManaged,omitempty"`

	// The name of the profile.
	Name string `json:"name,omitempty"`

	// A string containing a JSON object with the profile data.
	ProfileData string `json:"profileData,omitempty"`

	// The identifier of the profile.
	ProfileIdentifier string `json:"profileIdentifier,omitempty"`

	// The verison of the profile.
	Version string `json:"version,omitempty"`
}

// Validate validates this get network sm device device profiles o k body items0
func (o *GetNetworkSmDeviceDeviceProfilesOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get network sm device device profiles o k body items0 based on context it is used
func (o *GetNetworkSmDeviceDeviceProfilesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNetworkSmDeviceDeviceProfilesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNetworkSmDeviceDeviceProfilesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetNetworkSmDeviceDeviceProfilesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
